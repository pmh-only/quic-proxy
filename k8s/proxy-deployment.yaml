apiVersion: apps/v1
kind: Deployment
metadata:
  name: quic-proxy
  namespace: quic-proxy
  labels:
    app.kubernetes.io/name: quic-proxy
    app.kubernetes.io/component: proxy
    app.kubernetes.io/part-of: quic-proxy
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: quic-proxy
      app.kubernetes.io/component: proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: quic-proxy
        app.kubernetes.io/component: proxy
        app.kubernetes.io/part-of: quic-proxy
    spec:
      containers:
      - name: proxy
        image: quic-proxy/quic-proxy:v1.2.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          protocol: TCP
          name: http
        - containerPort: 443
          protocol: TCP
          name: https
        envFrom:
        - configMapRef:
            name: quic-proxy-config
        resources:
          requests:
            memory: "128Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /_gwhealthz
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /_gwhealthz
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 1
        volumeMounts:
        - name: tls-certs
          mountPath: /etc/ssl/certs
          readOnly: true
        - name: tls-private
          mountPath: /etc/ssl/private
          readOnly: true
        securityContext:
          # Note: Running as root is required for binding to ports 80/443
          # In production, consider using a different approach like:
          # - Service mesh (Istio) for TLS termination
          # - Non-privileged ports with service configuration
          runAsUser: 0
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
      volumes:
      - name: tls-certs
        secret:
          secretName: tls-certificate
          items:
          - key: tls.crt
            path: tls.crt
      - name: tls-private
        secret:
          secretName: tls-certificate
          items:
          - key: tls.key
            path: tls.key
      restartPolicy: Always
