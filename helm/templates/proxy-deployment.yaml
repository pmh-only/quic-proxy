apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "quic-proxy-waf.fullname" . }}-proxy
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "quic-proxy-waf.proxy.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.proxy.replicaCount }}
  selector:
    matchLabels:
      {{- include "quic-proxy-waf.proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "quic-proxy-waf.proxy.labels" . | nindent 8 }}
    spec:
      containers:
      - name: proxy
        image: {{ include "quic-proxy-waf.proxy.image" . }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.proxy.ports.http }}
          protocol: TCP
          name: http
        - containerPort: {{ .Values.proxy.ports.https }}
          protocol: TCP
          name: https
        envFrom:
        - configMapRef:
            name: {{ include "quic-proxy-waf.fullname" . }}-config
        resources:
          {{- toYaml .Values.proxy.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /_gwhealthz
            port: {{ .Values.proxy.ports.http }}
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /_gwhealthz
            port: {{ .Values.proxy.ports.http }}
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 1
        volumeMounts:
        - name: tls-certs
          mountPath: /etc/ssl/certs
          readOnly: true
        - name: tls-private
          mountPath: /etc/ssl/private
          readOnly: true
        securityContext:
          # Running as root is required for binding to ports 80/443
          runAsUser: 0
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
      volumes:
      - name: tls-certs
        secret:
          secretName: {{ .Values.proxy.tls.secretName }}
          items:
          - key: tls.crt
            path: tls.crt
      - name: tls-private
        secret:
          secretName: {{ .Values.proxy.tls.secretName }}
          items:
          - key: tls.key
            path: tls.key
      restartPolicy: Always
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}